scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Mean proportion of looks to action image by experiment") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_point(data = all_exp_test_uniq, aes(x = condition, y = subj_prop_action),
shape = 20, size = .3) +
geom_errorbar(data = all_exp_test_sum,
aes(ymin = YMin, ymax = YMax), width = .25) +
facet_wrap(vars(experiment))
all_exp_test_sum$experiment= factor(all_exp_test_sum$experiment, levels = c("French - adults", "English - adults", "English - children"))
levels(all_exp_test_sum$experiment)
ggplot(all_exp_test_sum) +
aes(x = condition, y = cond_prop_action, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Mean proportion of looks to action image by experiment") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_point(data = all_exp_test_uniq, aes(x = condition, y = subj_prop_action),
shape = 20, size = .3) +
geom_errorbar(data = all_exp_test_sum,
aes(ymin = YMin, ymax = YMax), width = .25) +
facet_wrap(experiment)
ggplot(all_exp_test_sum) +
aes(x = condition, y = cond_prop_action, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Mean proportion of looks to action image by experiment") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_point(data = all_exp_test_uniq, aes(x = condition, y = subj_prop_action),
shape = 20, size = .3) +
geom_errorbar(data = all_exp_test_sum,
aes(ymin = YMin, ymax = YMax), width = .25) +
facet_wrap(vars(experiment))
exp1_test_data <- exp1_test_data %>% group_by(participant_id, trial_no) %>% mutate(trial_prop_action = mean(look_action_video))
exp1_test_data_uniq <- exp1_test_data %>% group_by(participant_id, trial_no) %>%
filter(row_number() == 1) %>% group_by(participant_id) %>%
mutate(subj_prop_action = mean(trial_prop_action))
exp1_test_data_uniq = exp1_test_data_uniq %>% mutate(experiment = "a) French - adults")
exp1_test_sum <- exp1_test_data_uniq %>% group_by(participant_id) %>%
filter(row_number() == 1) %>% group_by(condition) %>%
# note: we pull out only the first row because each subject only has ONE mean calculated across all three test trials and we don't want to triple-count each data point
summarise(cond_prop_action = mean(subj_prop_action),
sd = sd(subj_prop_action),
CI.Low = ci.low(subj_prop_action),
CI.High = ci.high(subj_prop_action), n = n()) %>%
mutate(YMin = cond_prop_action - CI.Low,
YMax = cond_prop_action + CI.High)
exp1_test_sum = exp1_test_sum %>% mutate(experiment = "a) French - adults")
exp2_test_data <- exp2_data %>% filter(target_audio_type == "novel",
trial_stage == "event",
look_left_img == TRUE |
look_right_img == TRUE)
exp2_test_data_event <- exp2_test_data %>%
filter(time_since_trial_start >= trial_frame_start &
time_since_trial_start <=  trial_frame_start + 9000)
exp2_test_data_event <- exp2_test_data_event %>% group_by(participant_id, trial_no) %>% mutate(trial_prop_action = mean(look_action_img))
exp2_test_data_uniq <- exp2_test_data_event %>%
group_by(participant_id, trial_no) %>%
filter(row_number() == 1) %>% group_by(participant_id) %>%
mutate(subj_prop_action = mean(trial_prop_action))
exp2_test_data_uniq = exp2_test_data_uniq %>% mutate(experiment = "b) English - adults")
exp2_test_sum <- exp2_test_data_uniq %>% group_by(participant_id) %>%
filter(row_number() == 1) %>% group_by(condition) %>%
# note: we pull out only the first row because each subject only has ONE mean calculated across all four test trials and we don't want to quadruple-count each data point
summarise(cond_prop_action = mean(subj_prop_action),
sd = sd(subj_prop_action),
CI.Low = ci.low(subj_prop_action),
CI.High = ci.high(subj_prop_action),
n = n()) %>%
mutate(YMin = cond_prop_action - CI.Low,
YMax = cond_prop_action + CI.High)
exp2_test_sum = exp2_test_sum %>% mutate(experiment = "b) English - adults")
exp3_test_data_uniq = exp3_data %>% group_by(subid, trial_no) %>%
filter(row_number() == 1) %>%
group_by(subid) %>%
mutate(subj_prop_action = mean(trial_action_prop))
exp3_test_data_uniq = exp3_test_data_uniq %>% mutate(experiment = "c) English - children")
exp3_test_sum = exp3_test_data_uniq %>% group_by(subid) %>%
filter(row_number() == 1) %>%
group_by(condition) %>%
summarise(cond_prop_action = mean(na.omit(subj_prop_action)),
sd = sd(na.omit(subj_prop_action)),
CI.Low = ci.low(na.omit(subj_prop_action)),
CI.High = ci.high(na.omit(subj_prop_action)),
n = n())  %>%
mutate(YMin = cond_prop_action - CI.Low,
YMax = cond_prop_action + CI.High)
exp3_test_sum = exp3_test_sum %>% mutate(experiment = "c) English - children")
all_exp_test_sum = rbind(exp1_test_sum, exp2_test_sum, exp3_test_sum)
all_exp_test_sum$condition= factor(all_exp_test_sum$condition, levels = c("baseline", "noun", "verb"))
all_exp_test_uniq = rbind(exp1_test_data_uniq, exp2_test_data_uniq, exp3_test_data_uniq)
ggplot(all_exp_test_sum) +
aes(x = condition, y = cond_prop_action, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Mean proportion of looks to action image by experiment") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_point(data = all_exp_test_uniq, aes(x = condition, y = subj_prop_action),
shape = 20, size = .3) +
geom_errorbar(data = all_exp_test_sum,
aes(ymin = YMin, ymax = YMax), width = .25) +
facet_wrap(vars(experiment))
ggsave("../graphs/all_exp_mean_prop_action_look.pdf", width = 8, height = 4)
ggplot(all_exp_test_sum) +
aes(x = condition, y = cond_prop_action, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Mean proportion of looks to action image by experiment") +
xlab("Condition") +
ylab("Mean proportion of looks") +
#geom_point(data = all_exp_test_uniq, aes(x = condition, y = subj_prop_action),
#shape = 20, size = .3) +
geom_dotplot(data = all_exp_test_uniq, aes(x = condition, y = subj_prop_action), binaxis = "y", stackdir = "center", binwidth = .01, alpha = .15) +
geom_errorbar(data = all_exp_test_sum,
aes(ymin = YMin, ymax = YMax), width = .25) +
facet_wrap(vars(experiment))
ggsave("../graphs/all_exp_mean_prop_action_dots.pdf", width = 8, height = 4)
library(knitr)
opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(rjson)
theme_set(theme_bw())
setwd("~/Documents/honors-thesis/syntactic-adaptation-and-word-learning/analysis/3_children_english/scripts")
install.packages('ggthemes')
install.packages('rjson')
## raw lookit data
jf =  '../data/What-s-a-moop--Learning-from-sentence-patterns_all-responses.json'
## lookit trial data
jd <- fromJSON(file = jf)
## total number of participants
num_subjects = 98
subjects=seq(1,num_subjects)
library(rjson)
## raw lookit data
jf =  '../data/What-s-a-moop--Learning-from-sentence-patterns_all-responses.json'
## lookit trial data
jd <- fromJSON(file = jf)
## total number of participants
num_subjects = 98
subjects=seq(1,num_subjects)
noun_cond_words = c("dog", "doll", "horse", "shoe", "ball", "box", "book", "hat")
verb_cond_words = c("cry", "eat", "wave", "draw", "sleep", "read", "drink", "sit")
noun_fillers = c("dog_filler", "doll_filler", "horse_filler", "shoe_filler", "ball_filler", "box_filler", "book_filler", "hat_filler")
verb_fillers = c("cry_filler", "eat_filler", "wave_filler", "draw_filler", "sleep_filler", "read_filler", "drink_filler", "sit_filler")
test_trials = c('76-test-trial-event-9','83-test-trial-event-10','91-test-trial-event-11','98-test-trial-event-12')
session_id_exclude = c('38802', '36758', '36759', '36760', '39153', '34340', '32930', '32581', '25920', '36767')
rm(list = ls())
library(knitr)
opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(rjson)
theme_set(theme_bw())
## raw lookit data
jf =  '../data/What-s-a-moop--Learning-from-sentence-patterns_all-responses.json'
## lookit trial data
jd <- fromJSON(file = jf)
## total number of participants
num_subjects = 98
subjects=seq(1,num_subjects)
noun_cond_words = c("dog", "doll", "horse", "shoe", "ball", "box", "book", "hat")
verb_cond_words = c("cry", "eat", "wave", "draw", "sleep", "read", "drink", "sit")
noun_fillers = c("dog_filler", "doll_filler", "horse_filler", "shoe_filler", "ball_filler", "box_filler", "book_filler", "hat_filler")
verb_fillers = c("cry_filler", "eat_filler", "wave_filler", "draw_filler", "sleep_filler", "read_filler", "drink_filler", "sit_filler")
test_trials = c('76-test-trial-event-9','83-test-trial-event-10','91-test-trial-event-11','98-test-trial-event-12')
session_id_exclude = c('38802', '36758', '36759', '36760', '39153', '34340', '32930', '32581', '25920', '36767')
count_trials=0
for (s in subjects) {
this_sub=jd[[s]]
subid = this_sub$response$id
uuid = this_sub$response$uuid
gender = this_sub$child$gender
if (this_sub$response$completed & !this_sub$response$id %in% session_id_exclude & !this_sub$response$withdrawn & !this_sub$response$is_preview){
# exclude pilot IDs, incomplete sessions, etc.
# print(subid) # use this to track how many participants have been run through!
exp_data = this_sub$exp_data
exp_start_time =  strptime(exp_data$`9-start-recording-with-image`$eventTimings[[6]]$timestamp, "%Y-%M-%dT%H:%M:%OSZ")
# get the child's condition
if(isTRUE(grepl("filler", exp_data$`16-test-trial-event-1`$audioPlayed)) &
isTRUE(grepl("filler", exp_data$`23-test-trial-event-2`$audioPlayed)) &
isTRUE(grepl("filler", exp_data$`31-test-trial-event-3`$audioPlayed))
){
condition = "baseline"
}
else if(isTRUE(grepl(paste(verb_fillers, collapse="|"), exp_data$`16-test-trial-event-1`$audioPlayed)) |
isTRUE(grepl(paste(verb_fillers, collapse="|"), exp_data$`23-test-trial-event-2`$audioPlayed)) |
isTRUE(grepl(paste(verb_fillers, collapse="|"), exp_data$`31-test-trial-event-3`$audioPlayed))
){
condition = "noun"
}
else condition = "verb"
for (test_trial in test_trials){
count_trials = count_trials + 1
trial_no = as.numeric(gsub("^.*?event-","", test_trial))
# general information
when_completed = this_sub$exp_data[2]$`8-here-we-go`$eventTimings[[1]]$timestamp
date_completed = str_split_fixed(when_completed,'T',2)[[1]]
exp_start = exp_start_time
age_in_weeks = as.numeric(this_sub$child$age_rounded)
# trial-specific information
if(test_trial == '76-test-trial-event-9'){
this_trial_data = exp_data$`76-test-trial-event-9`
}
else if (test_trial == '83-test-trial-event-10'){
this_trial_data = exp_data$`83-test-trial-event-10`
}
else if (test_trial == '91-test-trial-event-11'){
this_trial_data = exp_data$`91-test-trial-event-11`
}
else this_trial_data = exp_data$`98-test-trial-event-12`
# timing information
trial_duration = this_trial_data$frameDuration
trial_start = strptime(this_trial_data$eventTimings[[1]]$timestamp, "%Y-%M-%dT%H:%M:%OSZ")
trial_end = strptime(this_trial_data$eventTimings[[7]]$timestamp, "%Y-%M-%dT%H:%M:%OSZ")
trial_start_video = as.numeric(trial_start - exp_start_time)*60000
trial_end_video = as.numeric(trial_end - exp_start_time)*60000
# image information
noun_image = gsub("^.*?img/","", this_trial_data$images[[1]]$src)
noun_image = gsub(".jpg", "", noun_image)
noun_image_position = this_trial_data$images[[1]]$position
verb_image = gsub("^.*?img/","", this_trial_data$images[[2]]$src)
verb_image = gsub(".jpg", "", verb_image)
verb_image_position = this_trial_data$images[[2]]$position
trial_audio = gsub("^.*?mp3/","", this_trial_data$audioPlayed)
trial_audio = gsub(".mp3","", trial_audio)
# make the full data frame
if (count_trials==1){
test_trial_data = data.frame(subid, uuid, gender, trial_no, condition, test_trial, date_completed, age_in_weeks, exp_start, trial_duration, trial_start, trial_end, trial_start_video, trial_end_video, noun_image, noun_image_position, verb_image, verb_image_position, trial_audio)
} else {
this_trial = data.frame(subid, uuid, gender, trial_no, condition, test_trial, date_completed, age_in_weeks, exp_start, trial_duration, trial_start, trial_end, trial_start_video, trial_end_video, noun_image, noun_image_position, verb_image, verb_image_position, trial_audio)
test_trial_data <- rbind(test_trial_data, this_trial)
}
}
}
}
count_trials=0
for (s in subjects) {
this_sub=jd[[s]]
subid = this_sub$response$id
uuid = this_sub$response$uuid
gender = this_sub$child$gender
if (this_sub$response$completed & !this_sub$response$id %in% session_id_exclude & !this_sub$response$withdrawn & !this_sub$response$is_preview){
# exclude pilot IDs, incomplete sessions, etc.
# print(subid) # use this to track how many participants have been run through!
exp_data = this_sub$exp_data
exp_start_time =  strptime(exp_data$`9-start-recording-with-image`$eventTimings[[6]]$timestamp, "%Y-%M-%dT%H:%M:%OSZ")
# get the child's condition
if(isTRUE(grepl("filler", exp_data$`16-test-trial-event-1`$audioPlayed)) &
isTRUE(grepl("filler", exp_data$`23-test-trial-event-2`$audioPlayed)) &
isTRUE(grepl("filler", exp_data$`31-test-trial-event-3`$audioPlayed))
){
condition = "baseline"
}
else if(isTRUE(grepl(paste(verb_fillers, collapse="|"), exp_data$`16-test-trial-event-1`$audioPlayed)) |
isTRUE(grepl(paste(verb_fillers, collapse="|"), exp_data$`23-test-trial-event-2`$audioPlayed)) |
isTRUE(grepl(paste(verb_fillers, collapse="|"), exp_data$`31-test-trial-event-3`$audioPlayed))
){
condition = "noun"
}
else condition = "verb"
for (test_trial in test_trials){
count_trials = count_trials + 1
trial_no = as.numeric(gsub("^.*?event-","", test_trial))
# general information
when_completed = this_sub$exp_data[2]$`8-here-we-go`$eventTimings[[1]]$timestamp
date_completed = str_split_fixed(when_completed,'T',2)[[1]]
exp_start = exp_start_time
age_in_weeks = as.numeric(this_sub$child$age_rounded)
# trial-specific information
if(test_trial == '76-test-trial-event-9'){
this_trial_data = exp_data$`76-test-trial-event-9`
}
else if (test_trial == '83-test-trial-event-10'){
this_trial_data = exp_data$`83-test-trial-event-10`
}
else if (test_trial == '91-test-trial-event-11'){
this_trial_data = exp_data$`91-test-trial-event-11`
}
else this_trial_data = exp_data$`98-test-trial-event-12`
# timing information
trial_duration = this_trial_data$frameDuration
trial_start = strptime(this_trial_data$eventTimings[[1]]$timestamp, "%Y-%M-%dT%H:%M:%OSZ")
trial_end = strptime(this_trial_data$eventTimings[[7]]$timestamp, "%Y-%M-%dT%H:%M:%OSZ")
trial_start_video = as.numeric(trial_start - exp_start_time)*60000
trial_end_video = as.numeric(trial_end - exp_start_time)*60000
# image information
noun_image = gsub("^.*?img/","", this_trial_data$images[[1]]$src)
noun_image = gsub(".jpg", "", noun_image)
noun_image_position = this_trial_data$images[[1]]$position
verb_image = gsub("^.*?img/","", this_trial_data$images[[2]]$src)
verb_image = gsub(".jpg", "", verb_image)
verb_image_position = this_trial_data$images[[2]]$position
trial_audio = gsub("^.*?mp3/","", this_trial_data$audioPlayed)
trial_audio = gsub(".mp3","", trial_audio)
# make the full data frame
if (count_trials==1){
test_trial_data = data.frame(subid, uuid, gender, trial_no, condition, test_trial, date_completed, age_in_weeks, exp_start, trial_duration, trial_start, trial_end, trial_start_video, trial_end_video, noun_image, noun_image_position, verb_image, verb_image_position, trial_audio)
} else {
this_trial = data.frame(subid, uuid, gender, trial_no, condition, test_trial, date_completed, age_in_weeks, exp_start, trial_duration, trial_start, trial_end, trial_start_video, trial_end_video, noun_image, noun_image_position, verb_image, verb_image_position, trial_audio)
test_trial_data <- rbind(test_trial_data, this_trial)
}
}
}
}
View(test_trial_data)
write.csv(test_trial_data, "../data/preprocessed_lookit_data.csv")
## preprocessed lookit data
test_trial_data = read.csv('../data/preprocessed_lookit_data.csv', stringsAsFactors = TRUE)
## datavyu coding files
datavyu_file_location = '../data/datavyu-video-codes/'
datavyu_files = dir('../data/datavyu-video-codes/')
all_subs_summary=array() # opens up an empty array
subcount=0 # starts subject counter at 0
for (file in datavyu_files){
this_subid = as.numeric(gsub(".csv", "", file))
subcount=subcount+1
# get data from all_data
this_sub <- test_trial_data %>%
filter(subid == this_subid)
# load datavyu coding file
coding_file <- read_csv(paste0(datavyu_file_location, this_subid, '.csv'))
# regularize column names
names(coding_file) <- c("ordinal", "look_onset", "look_offset", "look_type", "unknown")
coding_file <- coding_file %>%
rowwise() %>% # makes it go row by row -- gets rid of any grouping
mutate(look_dir = case_when(
look_type == "l" ~ "right",
look_type == "r" ~ "left",
look_type == "c" ~ "center",
look_type == "a" ~ "away" # THIS IS CORRECT - IT SHOULD BE REVERSED FOR LEFT AND RIGHT. CHILD'S LEFT = SCREEN RIGHT
))
# CONVERT DATA TO LONGFORM
look_interval = 50
coding_file <- coding_file %>%
mutate(subid = this_subid,
look_interval = look_interval,
full_look_time = ifelse(look_onset != 0 && look_offset != 0,
look_offset - look_onset, NA),
look_reps = ceiling(full_look_time/look_interval),
look_leftover = full_look_time - ((look_reps - 1)*look_interval))
coding_file_long <- coding_file %>% filter(! is.na(look_reps))
coding_file_long <- coding_file_long[rep(row.names(coding_file_long),
coding_file_long$look_reps), 1:9]
coding_file_long <- coding_file_long %>% group_by(look_onset, subid) %>%
mutate(look_start = look_onset + (row_number() - 1)*look_interval,
look_end = look_start + (look_interval - 1))
if(subcount == 1){
video_data_long = data.frame(coding_file_long)
}
else{
video_data_long = rbind(video_data_long, coding_file_long)
}
}
test_trial_data$subid <- as.numeric(test_trial_data$subid)
full_test_data = inner_join(video_data_long, test_trial_data, by = "subid")
# filter out looks that don't fit into a test trial
full_test_data = full_test_data %>%
filter(look_start >= trial_start_video, look_end <= trial_end_video) %>%
select(-unknown)
write.csv(full_test_data, "../data/full_test_data.csv")
full_test_data = read.csv('../data/full_test_data.csv', stringsAsFactors = TRUE)
full_test_data <- full_test_data %>% mutate(frame_start = case_when(
trial_audio == "dax" ~ 2016,
trial_audio == "vash" ~ 1994,
trial_audio == "smick" ~ 1987,
trial_audio == "nup" ~ 1992))
full_test_data <- full_test_data %>% mutate(frame_end = case_when(
trial_audio == "dax" ~ 2497,
trial_audio == "vash" ~ 2472,
trial_audio == "smick" ~ 2485,
trial_audio == "nup" ~ 2443))
full_test_data <- full_test_data %>% mutate(novel_word_end = case_when(
trial_audio == "ball" ~ 2828,
trial_audio == "ball_filler" ~ 3239,
trial_audio == "book" ~ 3142,
trial_audio == "book_filler" ~ 3279,
trial_audio == "box" ~ 3381,
trial_audio == "box_filler" ~ 3386,
trial_audio == "cry" ~ 3253,
trial_audio == "cry_filler" ~ 3183,
trial_audio == "dog" ~ 3240,
trial_audio == "dog_filler" ~ 3352,
trial_audio == "draw" ~ 3137,
trial_audio == "draw_filler" ~ 2935,
trial_audio == "drink" ~ 3116,
trial_audio == "drink_filler" ~ 2881,
trial_audio == "eat" ~ 3189,
trial_audio == "eat_filler" ~ 2814,
trial_audio == "dax" ~ 3354,
trial_audio == "fep" ~ 3087,
trial_audio == "hat" ~ 3205,
trial_audio == "hat_filler" ~ 3409,
trial_audio == "heth" ~ 3078,
trial_audio == "horse" ~ 3276,
trial_audio == "horse_filler" ~ 3459,
trial_audio == "moop" ~ 2844,
trial_audio == "nup" ~ 2996,
trial_audio == "read" ~ 3279,
trial_audio == "read_filler" ~ 3035,
trial_audio == "shoe" ~ 3453,
trial_audio == "shoe_filler" ~ 3136,
trial_audio == "sit" ~ 3229,
trial_audio == "sit_filler" ~ 2948,
trial_audio == "sleep" ~ 3281,
trial_audio == "sleep_filler" ~ 2991,
trial_audio == "smick" ~ 3261,
trial_audio == "vash" ~ 3275,
trial_audio == "wave" ~ 3284,
trial_audio == "wave_filler" ~ 2824
))
event_data = full_test_data %>%
mutate(trial_frame_start = trial_start_video + frame_start,
trial_frame_end = trial_start_video + frame_end,
one_look_length = look_end - look_start)
event_data = event_data %>%
mutate(time_since_frame_start = look_start - trial_frame_start)
girls_end = mean(event_data$frame_end - event_data$frame_start)
novel_word_end = mean(event_data$novel_word_end - event_data$frame_start)
one_look_length = event_data$look_interval
event_data = event_data %>% group_by(subid, trial_no) %>%
mutate(away_look_length = sum(look_dir == "away")*one_look_length) %>%
filter(away_look_length < .5*(trial_end_video - trial_start_video))
event_data = event_data %>% filter(look_dir == "left" | look_dir == "right")
event_data$look_dir = factor(event_data$look_dir, levels = c("left", "right"))
event_data = event_data %>% filter(time_since_frame_start <= 6000)
event_data <- event_data %>% group_by(subid, trial_no) %>%
mutate(look_action_img = ifelse(look_dir == verb_image_position, TRUE, FALSE))
event_data_timecourse <- event_data %>%
mutate(timebin = plyr::round_any(time_since_frame_start, 50))
timecourse_sum_trial <- event_data_timecourse %>%
group_by(timebin, condition, trial_no) %>%
summarise(timebin_prop_action = mean(look_action_img),
n = n())
ggplot(timecourse_sum_trial) +
aes(x = timebin, y = timebin_prop_action, color = condition) +
geom_point(size = .2) +
geom_smooth(size = .2) +
facet_grid(trial_no ~ .) +
ggtitle("Proportion of looks to action image on test trials") +
xlab("Time since syntactic frame disambiguation (ms) during event phase") +
ylab("Condition") +
scale_color_manual(name="Condition", values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dark blue")) +
geom_hline(yintercept = .5, linetype = "dashed") +
geom_vline(xintercept = 0) +
ylim(c(0, 1))
timecourse_sum <- event_data_timecourse %>%
group_by(timebin, condition) %>%
summarise(timebin_prop_action = mean(look_action_img))  %>%
mutate(girls_end = girls_end, novel_word_end = novel_word_end)
ggplot(timecourse_sum) +
aes(x = timebin, y = timebin_prop_action, color = condition) +
geom_point(size = .3) +
geom_smooth() +
ggtitle("Time course: Proportion of looks to action image") +
xlab("Time since onset of ambiguous syntactic frame (ms)") +
ylab("Proportion of looks to action image") +
scale_color_manual(name="Condition", values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
geom_hline(yintercept = .5, linetype = "dashed") +
geom_vline(xintercept = 0, color = "black") +
ylim(c(0, 1)) +
geom_vline(xintercept = girls_end, linetype = "dashed") +
geom_vline(xintercept = novel_word_end, linetype= "dotted") +
scale_x_continuous(breaks = seq(min(timecourse_sum$timebin),
max(timecourse_sum$timebin), by = 1000))
event_data_disambig = event_data %>% filter(look_start >= trial_frame_start)
event_data_disambig <- event_data_disambig %>%
group_by(subid, trial_no) %>%
mutate(trial_prop_action = mean(look_action_img))
event_data_disambig_uniq = event_data_disambig %>%
group_by(subid, trial_no) %>%
filter(row_number() == 1) %>%
group_by(subid) %>%
mutate(subj_prop_action = mean(trial_prop_action))
action_look_sum = event_data_disambig_uniq %>% group_by(subid) %>%
filter(row_number() == 1) %>%
group_by(condition) %>%
summarise(cond_prop_action = mean(na.omit(subj_prop_action)),
sd = sd(na.omit(subj_prop_action)),
CI.Low = ci.low(na.omit(subj_prop_action)),
CI.High = ci.high(na.omit(subj_prop_action)),
n = n())  %>%
mutate(YMin = cond_prop_action - CI.Low,
YMax = cond_prop_action + CI.High)
source("helpers.R")
action_look_sum = event_data_disambig_uniq %>% group_by(subid) %>%
filter(row_number() == 1) %>%
group_by(condition) %>%
summarise(cond_prop_action = mean(na.omit(subj_prop_action)),
sd = sd(na.omit(subj_prop_action)),
CI.Low = ci.low(na.omit(subj_prop_action)),
CI.High = ci.high(na.omit(subj_prop_action)),
n = n())  %>%
mutate(YMin = cond_prop_action - CI.Low,
YMax = cond_prop_action + CI.High)
ggplot(action_look_sum) +
aes(x = condition, y = cond_prop_action, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Test trials: Participants' mean proportion of looks to action image") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_point(data = event_data_disambig_uniq, aes(x = condition, y = subj_prop_action), shape = 21, size = .5) +
geom_errorbar(data = action_look_sum,
aes(ymin = YMin, ymax = YMax), width = .25)
