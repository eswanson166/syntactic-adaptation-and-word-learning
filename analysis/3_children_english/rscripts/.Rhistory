### 400Hz_tones: TONES
# this_video_duration: comes from looking at video file (should be same as trial_stream_time)
# distractorCategory: category that was not familairized
## datavyu coding files
# dir =  get all the files in this location
datavyu_files = dir('../data/datavyu-video-codes/')
datavyu_file_location = '../data/datavyu-video-codes/'
lookit_full_videos = dir("../lookit-videos/full-videos")
unique_sub = all_data %>% group_by(subid, uuid) %>% filter(row_number() == 1)
for (i in 1:nrow(unique_sub)){
for (video in lookit_full_videos){
if(grepl(unique_sub$uuid[i], video)){
file.rename(video, paste(unique_sub$subid[i], ".mp4", sep=""))
}
}
}
all_subs_summary=array() # opens up an empty array
subcount=0 # starts subject counter at 0
for (file in datavyu_files){
#this_subid = as.numeric(str_split_fixed(file,'_',2)[,1])
this_subid = as.numeric(gsub(".csv", "", file))
subcount=subcount+1
# get data from all_data
this_sub <- all_data %>%
filter(subid == this_subid)
print(this_subid)
#trial_cutoffs = c(0,cumsum(this_sub$this_video_duration)*1000)
# load datavyu coding file
coding_file <- read_csv(paste0(datavyu_file_location,this_subid, '.csv'))
#coding_file <- coding_file %>% select(-X5)
# regularize column names
names(coding_file) <- c("ordinal", "look_onset", "look_offset", "look_type", "unknown")
coding_file <- coding_file %>%
rowwise() %>% # makes it go row by row -- gets rid of any grouping
mutate(look_dir = case_when(
look_type == "l" ~ "right",
look_type == "r" ~ "left",
look_type == "c" ~ "center",
look_type == "a" ~ "away" # THIS IS CORRECT - SHOULD BE REVERSED FOR LEFT AND RIGHT. CHILD'S LEFT = SCREEN RIGHT
)) %>%
filter(look_dir %in% c('left','right')) %>%
mutate(tr9_ms = case_when(
between(look_onset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
between(look_offset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
look_offset > this_sub$trial_end_video[1] ~
this_sub$trial_end_video[1] - look_onset,
between(look_offset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
look_onset < this_sub$trial_start_video[1] ~
look_offset - this_sub$trial_start_video[1]
),
tr10_ms = case_when(
between(look_onset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
between(look_offset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
look_offset > this_sub$trial_end_video[2] ~
this_sub$trial_end_video[2] - look_onset,
between(look_offset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
look_onset < this_sub$trial_start_video[2] ~
look_offset - this_sub$trial_start_video[2]
),
tr11_ms = case_when(
between(look_onset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) &&
between(look_offset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[3], this_sub$trial_end_video[2]) &&
look_offset > this_sub$trial_end_video[3] ~
this_sub$trial_end_video[3] - look_onset,
between(look_offset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) &&
look_onset < this_sub$trial_start_video[3] ~
look_offset - this_sub$trial_start_video[3]
),
tr12_ms = case_when(
between(look_onset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
between(look_offset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
look_offset > this_sub$trial_end_video[4] ~
this_sub$trial_end_video[4] - look_onset,
between(look_offset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
look_onset < this_sub$trial_start_video[4] ~
look_offset - this_sub$trial_start_video[4]
))
## add total left and right looking time for each trial
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 9] <- sum(coding_file$tr9_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 10] <- sum(coding_file$tr10_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 11] <- sum(coding_file$tr11_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 12] <- sum(coding_file$tr12_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 9] <- sum(coding_file$tr9_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 10] <- sum(coding_file$tr10_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 11] <- sum(coding_file$tr11_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 12] <- sum(coding_file$tr12_ms[coding_file$look_dir == "right"], na.rm=TRUE)
}
all_data <- all_data %>%
mutate(total_looking_time = time_looking_left + time_looking_right,
action_image_looking_time = case_when(
verb_image_position == "left" ~ time_looking_left,
verb_image_position == "right" ~ time_looking_right
),
action_look_prop = action_image_looking_time/total_looking_time)
all_data = all_data %>% group_by(subid) %>%
mutate(avg_action_look_prop = mean(action_look_prop))
action_look_sum = all_data %>% group_by(subid) %>%
filter(row_number() == 1) %>%
group_by(condition) %>%
summarise(n = sum(!is.na(avg_action_look_prop)), avg_action_look = mean(na.omit(avg_action_look_prop)))
unique_sub = all_data %>% group_by(subid) %>% filter(row_number() == 1)
unique_sub %>% group_by(condition) %>% summarise(n = n())
ggplot(action_look_sum) +
aes(x = condition, y = avg_action_look, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Test trials: Participants' mean proportion of looks to action image") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_jitter(data = unique_sub, aes(x = condition, y = avg_action_look_prop))
ggsave("../graphs/mean_prop_action_look.jpg")
## preprocessed lookit data
preprocessed_filename = '../data/preprocessed_lookit_data.csv'
# COLUMNS IN ALL_DATA
# test_trial: name referring to test trial (in order of presentation)
# trial_stream_time: time (in seconds) that the trial was recorded for -- variable depending a bit on internet latencies
# videoId: string that refers to exact mp4 file for that particular trial -- each trial has it's own videoId
# leftImage: exact image shown on left side of screen (FOR BABY)
# leftImageCategory: image category shown on left side of screen  (FOR BABY)
# right: exact image shown on right side of screen (FOR BABY)
# rightImageCategory: image category shown on right side of screen  (FOR BABY)
# testLength: how long the trial should've been (10 s)
# condition: LABELs or TONES (between-subjects variable)
### look_dax_repeat_Amplified: LABELS
### 400Hz_tones: TONES
# this_video_duration: comes from looking at video file (should be same as trial_stream_time)
# distractorCategory: category that was not familairized
## datavyu coding files
# dir =  get all the files in this location
datavyu_files = dir('../data/datavyu-video-codes/')
datavyu_file_location = '../data/datavyu-video-codes/'
all_subs_summary=array() # opens up an empty array
subcount=0 # starts subject counter at 0
for (file in datavyu_files){
#this_subid = as.numeric(str_split_fixed(file,'_',2)[,1])
this_subid = as.numeric(gsub(".csv", "", file))
subcount=subcount+1
# get data from all_data
this_sub <- all_data %>%
filter(subid == this_subid)
print(this_subid)
#trial_cutoffs = c(0,cumsum(this_sub$this_video_duration)*1000)
# load datavyu coding file
coding_file <- read_csv(paste0(datavyu_file_location,this_subid, '.csv'))
#coding_file <- coding_file %>% select(-X5)
# regularize column names
names(coding_file) <- c("ordinal", "look_onset", "look_offset", "look_type", "unknown")
coding_file <- coding_file %>%
rowwise() %>% # makes it go row by row -- gets rid of any grouping
mutate(look_dir = case_when(
look_type == "l" ~ "right",
look_type == "r" ~ "left",
look_type == "c" ~ "center",
look_type == "a" ~ "away" # THIS IS CORRECT - SHOULD BE REVERSED FOR LEFT AND RIGHT. CHILD'S LEFT = SCREEN RIGHT
)) %>%
filter(look_dir %in% c('left','right')) %>%
mutate(tr9_ms = case_when(
between(look_onset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
between(look_offset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
look_offset > this_sub$trial_end_video[1] ~
this_sub$trial_end_video[1] - look_onset,
between(look_offset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
look_onset < this_sub$trial_start_video[1] ~
look_offset - this_sub$trial_start_video[1]
),
tr10_ms = case_when(
between(look_onset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
between(look_offset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
look_offset > this_sub$trial_end_video[2] ~
this_sub$trial_end_video[2] - look_onset,
between(look_offset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
look_onset < this_sub$trial_start_video[2] ~
look_offset - this_sub$trial_start_video[2]
),
tr11_ms = case_when(
between(look_onset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) &&
between(look_offset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[3], this_sub$trial_end_video[2]) &&
look_offset > this_sub$trial_end_video[3] ~
this_sub$trial_end_video[3] - look_onset,
between(look_offset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) &&
look_onset < this_sub$trial_start_video[3] ~
look_offset - this_sub$trial_start_video[3]
),
tr12_ms = case_when(
between(look_onset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
between(look_offset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
look_offset > this_sub$trial_end_video[4] ~
this_sub$trial_end_video[4] - look_onset,
between(look_offset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
look_onset < this_sub$trial_start_video[4] ~
look_offset - this_sub$trial_start_video[4]
))
## add total left and right looking time for each trial
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 9] <- sum(coding_file$tr9_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 10] <- sum(coding_file$tr10_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 11] <- sum(coding_file$tr11_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 12] <- sum(coding_file$tr12_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 9] <- sum(coding_file$tr9_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 10] <- sum(coding_file$tr10_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 11] <- sum(coding_file$tr11_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 12] <- sum(coding_file$tr12_ms[coding_file$look_dir == "right"], na.rm=TRUE)
}
all_data <- all_data %>%
mutate(total_looking_time = time_looking_left + time_looking_right,
action_image_looking_time = case_when(
verb_image_position == "left" ~ time_looking_left,
verb_image_position == "right" ~ time_looking_right
),
action_look_prop = action_image_looking_time/total_looking_time)
all_data = all_data %>% group_by(subid) %>%
mutate(avg_action_look_prop = mean(action_look_prop))
action_look_sum = all_data %>% group_by(subid) %>%
filter(row_number() == 1) %>%
group_by(condition) %>%
summarise(n = sum(!is.na(avg_action_look_prop)), avg_action_look = mean(na.omit(avg_action_look_prop)))
unique_sub = all_data %>% group_by(subid) %>% filter(row_number() == 1)
unique_sub %>% group_by(condition) %>% summarise(n = n())
ggplot(action_look_sum) +
aes(x = condition, y = avg_action_look, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Test trials: Participants' mean proportion of looks to action image") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_jitter(data = unique_sub, aes(x = condition, y = avg_action_look_prop))
ggsave("../graphs/mean_prop_action_look.jpg")
## preprocessed lookit data
preprocessed_filename = '../data/preprocessed_lookit_data.csv'
# COLUMNS IN ALL_DATA
# test_trial: name referring to test trial (in order of presentation)
# trial_stream_time: time (in seconds) that the trial was recorded for -- variable depending a bit on internet latencies
# videoId: string that refers to exact mp4 file for that particular trial -- each trial has it's own videoId
# leftImage: exact image shown on left side of screen (FOR BABY)
# leftImageCategory: image category shown on left side of screen  (FOR BABY)
# right: exact image shown on right side of screen (FOR BABY)
# rightImageCategory: image category shown on right side of screen  (FOR BABY)
# testLength: how long the trial should've been (10 s)
# condition: LABELs or TONES (between-subjects variable)
### look_dax_repeat_Amplified: LABELS
### 400Hz_tones: TONES
# this_video_duration: comes from looking at video file (should be same as trial_stream_time)
# distractorCategory: category that was not familairized
## datavyu coding files
# dir =  get all the files in this location
datavyu_files = dir('../data/datavyu-video-codes/')
datavyu_file_location = '../data/datavyu-video-codes/'
all_subs_summary=array() # opens up an empty array
subcount=0 # starts subject counter at 0
for (file in datavyu_files){
#this_subid = as.numeric(str_split_fixed(file,'_',2)[,1])
this_subid = as.numeric(gsub(".csv", "", file))
subcount=subcount+1
# get data from all_data
this_sub <- all_data %>%
filter(subid == this_subid)
print(this_subid)
#trial_cutoffs = c(0,cumsum(this_sub$this_video_duration)*1000)
# load datavyu coding file
coding_file <- read_csv(paste0(datavyu_file_location,this_subid, '.csv'))
#coding_file <- coding_file %>% select(-X5)
# regularize column names
names(coding_file) <- c("ordinal", "look_onset", "look_offset", "look_type", "unknown")
coding_file <- coding_file %>%
rowwise() %>% # makes it go row by row -- gets rid of any grouping
mutate(look_dir = case_when(
look_type == "l" ~ "right",
look_type == "r" ~ "left",
look_type == "c" ~ "center",
look_type == "a" ~ "away" # THIS IS CORRECT - SHOULD BE REVERSED FOR LEFT AND RIGHT. CHILD'S LEFT = SCREEN RIGHT
)) %>%
filter(look_dir %in% c('left','right')) %>%
mutate(tr9_ms = case_when(
between(look_onset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
between(look_offset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
look_offset > this_sub$trial_end_video[1] ~
this_sub$trial_end_video[1] - look_onset,
between(look_offset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
look_onset < this_sub$trial_start_video[1] ~
look_offset - this_sub$trial_start_video[1]
),
tr10_ms = case_when(
between(look_onset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
between(look_offset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
look_offset > this_sub$trial_end_video[2] ~
this_sub$trial_end_video[2] - look_onset,
between(look_offset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
look_onset < this_sub$trial_start_video[2] ~
look_offset - this_sub$trial_start_video[2]
),
tr11_ms = case_when(
between(look_onset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) &&
between(look_offset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[3], this_sub$trial_end_video[2]) &&
look_offset > this_sub$trial_end_video[3] ~
this_sub$trial_end_video[3] - look_onset,
between(look_offset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) &&
look_onset < this_sub$trial_start_video[3] ~
look_offset - this_sub$trial_start_video[3]
),
tr12_ms = case_when(
between(look_onset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
between(look_offset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
look_offset > this_sub$trial_end_video[4] ~
this_sub$trial_end_video[4] - look_onset,
between(look_offset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
look_onset < this_sub$trial_start_video[4] ~
look_offset - this_sub$trial_start_video[4]
))
## add total left and right looking time for each trial
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 9] <- sum(coding_file$tr9_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 10] <- sum(coding_file$tr10_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 11] <- sum(coding_file$tr11_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 12] <- sum(coding_file$tr12_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 9] <- sum(coding_file$tr9_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 10] <- sum(coding_file$tr10_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 11] <- sum(coding_file$tr11_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 12] <- sum(coding_file$tr12_ms[coding_file$look_dir == "right"], na.rm=TRUE)
}
all_data = all_data %>% group_by(subid) %>%
mutate(avg_action_look_prop = mean(action_look_prop))
action_look_sum = all_data %>% group_by(subid) %>%
filter(row_number() == 1) %>%
group_by(condition) %>%
summarise(n = sum(!is.na(avg_action_look_prop)), avg_action_look = mean(na.omit(avg_action_look_prop)))
all_data <- all_data %>%
mutate(total_looking_time = time_looking_left + time_looking_right,
action_image_looking_time = case_when(
verb_image_position == "left" ~ time_looking_left,
verb_image_position == "right" ~ time_looking_right
),
action_look_prop = action_image_looking_time/total_looking_time)
all_data = all_data %>% group_by(subid) %>%
mutate(avg_action_look_prop = mean(action_look_prop))
action_look_sum = all_data %>% group_by(subid) %>%
filter(row_number() == 1) %>%
group_by(condition) %>%
summarise(n = sum(!is.na(avg_action_look_prop)), avg_action_look = mean(na.omit(avg_action_look_prop)))
unique_sub = all_data %>% group_by(subid) %>% filter(row_number() == 1)
unique_sub %>% group_by(condition) %>% summarise(n = n())
ggplot(action_look_sum) +
aes(x = condition, y = avg_action_look, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Test trials: Participants' mean proportion of looks to action image") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_jitter(data = unique_sub, aes(x = condition, y = avg_action_look_prop))
ggsave("../graphs/mean_prop_action_look.jpg")
## preprocessed lookit data
preprocessed_filename = '../data/preprocessed_lookit_data.csv'
# COLUMNS IN ALL_DATA
# test_trial: name referring to test trial (in order of presentation)
# trial_stream_time: time (in seconds) that the trial was recorded for -- variable depending a bit on internet latencies
# videoId: string that refers to exact mp4 file for that particular trial -- each trial has it's own videoId
# leftImage: exact image shown on left side of screen (FOR BABY)
# leftImageCategory: image category shown on left side of screen  (FOR BABY)
# right: exact image shown on right side of screen (FOR BABY)
# rightImageCategory: image category shown on right side of screen  (FOR BABY)
# testLength: how long the trial should've been (10 s)
# condition: LABELs or TONES (between-subjects variable)
### look_dax_repeat_Amplified: LABELS
### 400Hz_tones: TONES
# this_video_duration: comes from looking at video file (should be same as trial_stream_time)
# distractorCategory: category that was not familairized
## datavyu coding files
# dir =  get all the files in this location
datavyu_files = dir('../data/datavyu-video-codes/')
datavyu_file_location = '../data/datavyu-video-codes/'
lookit_full_videos = dir("../lookit-videos/full-videos")
unique_sub = all_data %>% group_by(subid, uuid) %>% filter(row_number() == 1)
for (i in 1:nrow(unique_sub)){
for (video in lookit_full_videos){
if(grepl(unique_sub$uuid[i], video)){
file.rename(video, paste(unique_sub$subid[i], ".mp4", sep=""))
}
}
}
all_subs_summary=array() # opens up an empty array
subcount=0 # starts subject counter at 0
for (file in datavyu_files){
#this_subid = as.numeric(str_split_fixed(file,'_',2)[,1])
this_subid = as.numeric(gsub(".csv", "", file))
subcount=subcount+1
# get data from all_data
this_sub <- all_data %>%
filter(subid == this_subid)
print(this_subid)
#trial_cutoffs = c(0,cumsum(this_sub$this_video_duration)*1000)
# load datavyu coding file
coding_file <- read_csv(paste0(datavyu_file_location,this_subid, '.csv'))
#coding_file <- coding_file %>% select(-X5)
# regularize column names
names(coding_file) <- c("ordinal", "look_onset", "look_offset", "look_type", "unknown")
coding_file <- coding_file %>%
rowwise() %>% # makes it go row by row -- gets rid of any grouping
mutate(look_dir = case_when(
look_type == "l" ~ "right",
look_type == "r" ~ "left",
look_type == "c" ~ "center",
look_type == "a" ~ "away" # THIS IS CORRECT - SHOULD BE REVERSED FOR LEFT AND RIGHT. CHILD'S LEFT = SCREEN RIGHT
)) %>%
filter(look_dir %in% c('left','right')) %>%
mutate(tr9_ms = case_when(
between(look_onset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
between(look_offset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
look_offset > this_sub$trial_end_video[1] ~
this_sub$trial_end_video[1] - look_onset,
between(look_offset, this_sub$trial_start_video[1], this_sub$trial_end_video[1]) &&
look_onset < this_sub$trial_start_video[1] ~
look_offset - this_sub$trial_start_video[1]
),
tr10_ms = case_when(
between(look_onset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
between(look_offset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
look_offset > this_sub$trial_end_video[2] ~
this_sub$trial_end_video[2] - look_onset,
between(look_offset, this_sub$trial_start_video[2], this_sub$trial_end_video[2]) &&
look_onset < this_sub$trial_start_video[2] ~
look_offset - this_sub$trial_start_video[2]
),
tr11_ms = case_when(
between(look_onset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) &&
between(look_offset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[3], this_sub$trial_end_video[2]) &&
look_offset > this_sub$trial_end_video[3] ~
this_sub$trial_end_video[3] - look_onset,
between(look_offset, this_sub$trial_start_video[3], this_sub$trial_end_video[3]) &&
look_onset < this_sub$trial_start_video[3] ~
look_offset - this_sub$trial_start_video[3]
),
tr12_ms = case_when(
between(look_onset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
between(look_offset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) ~
look_offset - look_onset,
between(look_onset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
look_offset > this_sub$trial_end_video[4] ~
this_sub$trial_end_video[4] - look_onset,
between(look_offset, this_sub$trial_start_video[4], this_sub$trial_end_video[4]) &&
look_onset < this_sub$trial_start_video[4] ~
look_offset - this_sub$trial_start_video[4]
))
## add total left and right looking time for each trial
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 9] <- sum(coding_file$tr9_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 10] <- sum(coding_file$tr10_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 11] <- sum(coding_file$tr11_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_left[all_data$subid == this_subid & all_data$trial_no == 12] <- sum(coding_file$tr12_ms[coding_file$look_dir == "left"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 9] <- sum(coding_file$tr9_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 10] <- sum(coding_file$tr10_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 11] <- sum(coding_file$tr11_ms[coding_file$look_dir == "right"], na.rm=TRUE)
all_data$time_looking_right[all_data$subid == this_subid & all_data$trial_no == 12] <- sum(coding_file$tr12_ms[coding_file$look_dir == "right"], na.rm=TRUE)
}
all_data <- all_data %>%
mutate(total_looking_time = time_looking_left + time_looking_right,
action_image_looking_time = case_when(
verb_image_position == "left" ~ time_looking_left,
verb_image_position == "right" ~ time_looking_right
),
action_look_prop = action_image_looking_time/total_looking_time)
all_data = all_data %>% group_by(subid) %>%
mutate(avg_action_look_prop = mean(action_look_prop))
action_look_sum = all_data %>% group_by(subid) %>%
filter(row_number() == 1) %>%
group_by(condition) %>%
summarise(n = sum(!is.na(avg_action_look_prop)), avg_action_look = mean(na.omit(avg_action_look_prop)))
unique_sub = all_data %>% group_by(subid) %>% filter(row_number() == 1)
unique_sub %>% group_by(condition) %>% summarise(n = n())
ggplot(action_look_sum) +
aes(x = condition, y = avg_action_look, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Test trials: Participants' mean proportion of looks to action image") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_jitter(data = unique_sub, aes(x = condition, y = avg_action_look_prop))
ggsave("../graphs/mean_prop_action_look.jpg")
ggplot(action_look_sum) +
aes(x = condition, y = avg_action_look, fill = condition) +
geom_bar(stat = "identity") +
scale_fill_manual(name = "Condition",values = c(wes_palette("Royal1")[1], wes_palette("Royal1")[2], "dodgerblue3")) +
ggtitle("Test trials: Participants' mean proportion of looks to action image") +
xlab("Condition") +
ylab("Mean proportion of looks") +
geom_jitter(data = unique_sub, aes(x = condition, y = avg_action_look_prop))
ggsave("../graphs/mean_prop_action_look.jpg")
